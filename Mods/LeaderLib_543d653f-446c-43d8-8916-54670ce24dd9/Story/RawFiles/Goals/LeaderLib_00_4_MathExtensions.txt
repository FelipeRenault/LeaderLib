Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LeaderLib_Math_Power(_Num, _Power, _Result)
//DB_LeaderLib_Math_Sine(_Angle, _Result)
//DB_LeaderLib_Math_Cosine(_Angle, _Result)
//DB_LeaderLib_Math_Factorial(_Factor, _Result)
//DB_LeaderLib_Math_AbsoluteValue(_Num, _Result)
//DB_LeaderLib_Math_AbsoluteValueInt(_Num, _Result)

//DB_LeaderLib_Math_Temp_FactorialOperation(_Factor, _MultiplyBy, _Result)
KBSECTION
//REGION NORMALIZE

//R = tMin + (X - oMin) * (tMax - tMin) / (oMax - oMin)
/*
tMin = _TargetRangeMin
tMax = _TargetRangeMax
oMin = _OriginalRangeMin
oMax = _OriginalRangeMax
X = _Input
R = Result
-----------
Example:
R = 0 + (596 - 0) * (2 - 0) / (999 - 0)
R = 1184 / 999
R = 1.185
*/
QRY
LeaderLib_Math_QRY_NormalizeReal((REAL)_Input, (REAL)_TargetRangeMin, (REAL)_TargetRangeMax, (REAL)_OriginalRangeMin, (REAL)_OriginalRangeMax)
THEN
LeaderLib_Math_NormalizeReal(_Input, _TargetRangeMin, _TargetRangeMax, _OriginalRangeMin, _OriginalRangeMax);

PROC
LeaderLib_Math_NormalizeReal((REAL)_Input, (REAL)_TargetRangeMin, (REAL)_TargetRangeMax, (REAL)_OriginalRangeMin, (REAL)_OriginalRangeMax)
AND
RealSubtract(_Input, _OriginalRangeMin, _FirstGroup) // (X - oMin)
AND
RealSubtract(_TargetRangeMax, _TargetRangeMin, _SecondGroup) // (tMax - tMin)
AND
RealSubtract(_OriginalRangeMax, _OriginalRangeMin, _ThirdGroup) // (oMax - oMin)
AND
RealProduct(_FirstGroup, _SecondGroup, _LeftSide)
AND
RealDivide(_LeftSide, _ThirdGroup, _RightSide) 
AND
RealSum(_TargetRangeMin, _RightSide, _Result)
THEN
DB_LeaderLib_Math_NormalizeReal(_Input, _Result);

QRY
LeaderLib_Math_QRY_NormalizeInt((INTEGER)_Input, (INTEGER)_TargetRangeMin, (INTEGER)_TargetRangeMax, (INTEGER)_OriginalRangeMin, (INTEGER)_OriginalRangeMax)
THEN
LeaderLib_Math_NormalizeInt(_Input, _TargetRangeMin, _TargetRangeMax, _OriginalRangeMin, _OriginalRangeMax);

PROC
LeaderLib_Math_NormalizeInt((INTEGER)_Input, (INTEGER)_TargetRangeMin, (INTEGER)_TargetRangeMax, (INTEGER)_OriginalRangeMin, (INTEGER)_OriginalRangeMax)
AND
Real(_TargetRangeMin, _TargetRangeMinR)
AND
Real(_TargetRangeMax, _TargetRangeMaxR)
AND
Real(_OriginalRangeMin, _OriginalRangeMinR)
AND
Real(_OriginalRangeMax, _OriginalRangeMaxR)
AND
Real(_Input, _InputR)
AND
LeaderLib_Math_QRY_NormalizeReal(_InputR, _TargetRangeMinR, _TargetRangeMaxR, _OriginalRangeMinR, _OriginalRangeMaxR)
AND
DB_LeaderLib_Math_NormalizeReal(_InputR, _ResultR)
AND
Integer(_ResultR, _ResultInt)
THEN
NOT DB_LeaderLib_Math_NormalizeReal(_InputR, _ResultR);
LeaderLib_Math_Normalize_Internal_Ceiling(_Input, _ResultR, _ResultInt);

PROC
LeaderLib_Math_Normalize_Internal_Ceiling((INTEGER)_Input, (REAL)_ResultR, (INTEGER)_ResultInt)
AND
Real(_ResultInt, _ResultIntR)
AND
_ResultIntR == _ResultR
THEN
DB_LeaderLib_Math_NormalizeInt(_Input, _ResultInt);

PROC
LeaderLib_Math_Normalize_Internal_Ceiling((INTEGER)_Input, (REAL)_ResultR, (INTEGER)_ResultInt)
AND
NOT DB_LeaderLib_Math_NormalizeInt(_Input, _)
AND
IntegerSum(_ResultInt, 1, _Result)
THEN
DB_LeaderLib_Math_NormalizeInt(_Input, _Result);

PROC
LeaderLib_Math_Normalize_ClearData()
AND
DB_LeaderLib_Math_NormalizeReal(_Input, _Result)
THEN
NOT DB_LeaderLib_Math_NormalizeReal(_Input, _Result);

PROC
LeaderLib_Math_Normalize_ClearData()
AND
DB_LeaderLib_Math_NormalizeInt(_Input, _Result)
THEN
NOT DB_LeaderLib_Math_NormalizeInt(_Input, _Result);
//END_REGION

//REGION POWER
QRY
LeaderLib_Math_QRY_Power((REAL)_Num, (INTEGER)_Power)
THEN
LeaderLib_Math_Internal_CalculatePower(_Num, _Power);

PROC
LeaderLib_Math_Power((REAL)_Num, (INTEGER)_Power)
AND
NOT DB_LeaderLib_Math_Power(_Num, _Power, _)
THEN
LeaderLib_Math_Internal_CalculatePower(_Num, _Power);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 2)
AND
RealProduct(_Num, _Num, _x)
THEN
DB_LeaderLib_Math_Power(_Num, 2, _x);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 3)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
THEN
DB_LeaderLib_Math_Power(_Num, 3, _x2);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 4)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
AND
RealProduct(_x2, _Num, _x3)
THEN
DB_LeaderLib_Math_Power(_Num, 4, _x3);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 5)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
AND
RealProduct(_x2, _Num, _x3)
AND
RealProduct(_x3, _Num, _x4)
THEN
DB_LeaderLib_Math_Power(_Num, 5, _x4);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 6)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
AND
RealProduct(_x2, _Num, _x3)
AND
RealProduct(_x3, _Num, _x4)
AND
RealProduct(_x4, _Num, _x5)
THEN
DB_LeaderLib_Math_Power(_Num, 6, _x5);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 7)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
AND
RealProduct(_x2, _Num, _x3)
AND
RealProduct(_x3, _Num, _x4)
AND
RealProduct(_x4, _Num, _x5)
AND
RealProduct(_x5, _Num, _x6)
THEN
DB_LeaderLib_Math_Power(_Num, 7, _x6);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 8)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
AND
RealProduct(_x2, _Num, _x3)
AND
RealProduct(_x3, _Num, _x4)
AND
RealProduct(_x4, _Num, _x5)
AND
RealProduct(_x5, _Num, _x6)
AND
RealProduct(_x6, _Num, _x7)
THEN
DB_LeaderLib_Math_Power(_Num, 8, _x7);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, 9)
AND
RealProduct(_Num, _Num, _x1)
AND
RealProduct(_x1, _Num, _x2)
AND
RealProduct(_x2, _Num, _x3)
AND
RealProduct(_x3, _Num, _x4)
AND
RealProduct(_x4, _Num, _x5)
AND
RealProduct(_x5, _Num, _x6)
AND
RealProduct(_x6, _Num, _x7)
AND
RealProduct(_x7, _Num, _x8)
THEN
DB_LeaderLib_Math_Power(_Num, 9, _x8);

PROC
LeaderLib_Math_Internal_CalculatePower((REAL)_Num, (INTEGER)_Power)
AND
_Power >= 10
THEN
LeaderLog_Log("DEBUG", "[LeaderLib:Math:Power] [ERROR] Powers above 10 are not implemented yet!");
//END_REGION

//REGION FACTORIAL
QRY
LeaderLib_Math_QRY_Factorial((INTEGER)_Factor)
THEN
LeaderLib_Math_Factorial(_Factor);

PROC
LeaderLib_Math_Factorial((INTEGER)_Factor)
AND
NOT DB_LeaderLib_Math_Factorial(_Factor, _)
THEN
LeaderLib_Math_Internal_CalculateFactorial(_Factor, _Factor, _Factor);

PROC
LeaderLib_Math_Internal_CalculateFactorial((INTEGER)_Factor, (INTEGER)_CurrentFactor, (INTEGER)_CurrentResult)
AND
_CurrentFactor <= 1
THEN
LeaderLib_Math_Internal_ProcessFactorialResult(_Factor);

PROC
LeaderLib_Math_Internal_CalculateFactorial((INTEGER)_Factor, (INTEGER)_CurrentFactor, (INTEGER)_CurrentResult)
AND
IntegerSubtract(_CurrentFactor, 1, _MultiplyBy)
AND
_MultiplyBy > 0
AND
IntegerProduct(_CurrentResult, _MultiplyBy, _Result)
THEN
NOT DB_LeaderLib_Math_Temp_FactorialOperation(_Factor, _CurrentFactor, _CurrentResult);
DB_LeaderLib_Math_Temp_FactorialOperation(_Factor, _MultiplyBy, _Result);
LeaderLib_Math_Internal_CheckNextFactorial(_Factor, _MultiplyBy, _Result);

PROC
LeaderLib_Math_Internal_CheckNextFactorial((INTEGER)_Factor, (INTEGER)_CurrentFactor, (INTEGER)_CurrentResult)
AND
_CurrentFactor <= 1
THEN
LeaderLib_Math_Internal_ProcessFactorialResult(_Factor);

PROC
LeaderLib_Math_Internal_CheckNextFactorial((INTEGER)_Factor, (INTEGER)_CurrentFactor, (INTEGER)_CurrentResult)
AND
_CurrentFactor > 1
THEN
LeaderLib_Math_Internal_CalculateFactorial(_Factor, _CurrentFactor, _CurrentResult);

PROC
LeaderLib_Math_Internal_ProcessFactorialResult((INTEGER)_Factor)
AND
NOT DB_LeaderLib_Math_Factorial(_Factor, _)
AND
DB_LeaderLib_Math_Temp_FactorialOperation(_Factor, _MultiplyBy, _Result)
THEN
NOT DB_LeaderLib_Math_Temp_FactorialOperation(_Factor, _MultiplyBy, _Result);
DB_LeaderLib_Math_Factorial(_Factor, _Result);
//END_REGION

//REGION SQUARE_ROOT

//END_REGION

//REGION SINE
QRY
LeaderLib_Math_QRY_Sine((REAL)_Angle)
THEN
LeaderLib_Math_Sine(_Angle);

PROC
LeaderLib_Math_Sine((REAL)_Angle)
AND
NOT DB_LeaderLib_Math_Sine(_Angle, _)
AND
RealProduct(_Angle, 3.14159265358979323846, _rads1)
AND
RealDivide(_rads1, 180.0, _x)
AND
//x - x^3/2!
LeaderLib_Math_QRY_Power(_x, 3)
AND
DB_LeaderLib_Math_Power(_x, 3, _p1)
AND
LeaderLib_Math_QRY_Factorial(3)
AND
DB_LeaderLib_Math_Factorial(3, _f3)
AND
Real(_f3, _fr3)
AND
RealDivide(_p1, _fr3, _xp1)
AND
RealSubtract(_x, _xp1, _xblock1)
AND
//+ x^5/5!
LeaderLib_Math_QRY_Power(_x, 5)
AND
DB_LeaderLib_Math_Power(_x, 5, _p2)
AND
LeaderLib_Math_QRY_Factorial(5)
AND
DB_LeaderLib_Math_Factorial(5, _f5)
AND
Real(_f5, _fr5)
AND
RealDivide(_p2, _fr5, _xp2)
AND
RealSum(_xblock1, _xp2, _xblock2)
AND
//- x^7/7!
LeaderLib_Math_QRY_Power(_x, 7)
AND
DB_LeaderLib_Math_Power(_x, 7, _p3)
AND
LeaderLib_Math_QRY_Factorial(7)
AND
DB_LeaderLib_Math_Factorial(7, _f7)
AND
Real(_f7, _fr7)
AND
RealDivide(_p3, _fr7, _xp3)
AND
RealSubtract(_xblock2, _xp3, _xblock3)
AND
//- x^9/9!
LeaderLib_Math_QRY_Power(_x, 9)
AND
DB_LeaderLib_Math_Power(_x, 9, _p4)
AND
LeaderLib_Math_QRY_Factorial(9)
AND
DB_LeaderLib_Math_Factorial(9, _f9)
AND
Real(_f9, _fr9)
AND
RealDivide(_p4, _fr9, _xp4)
AND
RealSum(_xblock3, _xp4, _xblock4)
THEN
DB_LeaderLib_Math_Sine(_Angle, _xblock4);
//END_REGION

//REGION COSINE
QRY
LeaderLib_Math_QRY_Cosine((REAL)_Angle)
THEN
LeaderLib_Math_Cosine(_Angle);

PROC
LeaderLib_Math_Cosine((REAL)_Angle)
AND
NOT DB_LeaderLib_Math_Cosine(_Angle, _)
AND
RealProduct(_Angle, 3.14159265358979323846, _rads1)
AND
RealDivide(_rads1, 180.0, _x)
AND
//1 - x^2/2!
LeaderLib_Math_QRY_Power(_x, 2)
AND
DB_LeaderLib_Math_Power(_x, 2, _p1)
AND
LeaderLib_Math_QRY_Factorial(2)
AND
DB_LeaderLib_Math_Factorial(2, _f1)
AND
Real(_f1, _fr1)
AND
RealDivide(_p1, _fr1, _xp1)
AND
RealSubtract(1.0, _xp1, _xblock1)
AND
//+ x^4/4!
LeaderLib_Math_QRY_Power(_x, 4)
AND
DB_LeaderLib_Math_Power(_x, 4, _p2)
AND
LeaderLib_Math_QRY_Factorial(4)
AND
DB_LeaderLib_Math_Factorial(4, _f2)
AND
Real(_f2, _fr2)
AND
RealDivide(_p2, _fr2, _xp2)
AND
RealSum(_xblock1, _xp2, _xblock2)
AND
//- x^6/6!
LeaderLib_Math_QRY_Power(_x, 6)
AND
DB_LeaderLib_Math_Power(_x, 6, _p3)
AND
LeaderLib_Math_QRY_Factorial(6)
AND
DB_LeaderLib_Math_Factorial(6, _f3)
AND
Real(_f3, _fr3)
AND
RealDivide(_p3, _fr3, _xp3)
AND
RealSubtract(_xblock2, _xp3, _xblock3)
AND
//- x^8/8!
LeaderLib_Math_QRY_Power(_x, 8)
AND
DB_LeaderLib_Math_Power(_x, 8, _p4)
AND
LeaderLib_Math_QRY_Factorial(8)
AND
DB_LeaderLib_Math_Factorial(8, _f4)
AND
Real(_f4, _fr4)
AND
RealDivide(_p4, _fr4, _xp4)
AND
RealSum(_xblock3, _xp4, _xblock4)
THEN
DB_LeaderLib_Math_Cosine(_Angle, _xblock4);
//END_REGION

//REGION ABSOLUTE
QRY
LeaderLib_Math_QRY_ClearAbsoluteValues()
THEN
LeaderLib_Math_ClearAbsoluteValues();

PROC
LeaderLib_Math_ClearAbsoluteValues()
AND
DB_LeaderLib_Math_AbsoluteValue(_Num, _AbsNum)
THEN
NOT DB_LeaderLib_Math_AbsoluteValue(_Num, _AbsNum);

QRY
LeaderLib_Math_QRY_AbsoluteValue((REAL)_Num)
THEN
LeaderLib_Math_Internal_AbsoluteValue(_Num);

PROC
LeaderLib_Math_Internal_AbsoluteValue((REAL)_Num)
AND
NOT DB_LeaderLib_Math_AbsoluteValue(_Num, _)
AND
_Num < 0
AND
RealProduct(_Num, -1.0, _AbsNum)
THEN
DB_LeaderLib_Math_AbsoluteValue(_Num, _AbsNum);

PROC
LeaderLib_Math_Internal_AbsoluteValue((REAL)_Num)
AND
NOT DB_LeaderLib_Math_AbsoluteValue(_Num, _)
AND
_Num >= 0
THEN
DB_LeaderLib_Math_AbsoluteValue(_Num, _Num);

QRY
LeaderLib_Math_QRY_AbsoluteValue((REAL)_Num)
THEN
LeaderLib_Math_Internal_AbsoluteValue(_Num);

PROC
LeaderLib_Math_Internal_AbsoluteValueInt((INTEGER)_Num)
AND
NOT DB_LeaderLib_Math_AbsoluteValueInt(_Num, _)
AND
_Num < 0
AND
IntegerProduct(_Num, -1, _AbsNum)
THEN
DB_LeaderLib_Math_AbsoluteValueInt(_Num, _AbsNum);

PROC
LeaderLib_Math_Internal_AbsoluteValueInt((INTEGER)_Num)
AND
NOT DB_LeaderLib_Math_AbsoluteValueInt(_Num, _)
AND
_Num >= 0
THEN
DB_LeaderLib_Math_AbsoluteValueInt(_Num, _Num);
//END_REGION

//REGION 2D_ROTATION
PROC
LeaderLib_Math_ConvertAngle((REAL)_Angle)
AND
_Angle < 0.0
AND
RealProduct(_Angle, -1.0, _a1)
AND
RealSum(_a1, 270.0, _a2)
THEN
DB_LeaderLib_Math_Angle(_Angle, _a2);

PROC
LeaderLib_Math_ConvertAngle((REAL)_Angle)
AND
_Angle >= 0.0
THEN
DB_LeaderLib_Math_Angle(_Angle, _Angle);

QRY
LeaderLib_Math_QRY_ConvertAngle((REAL)_Angle)
THEN
LeaderLib_Math_ConvertAngle(_Angle);

QRY
LeaderLib_Math_QRY_RotatePoint((REAL)_x1, (REAL)_z1, (REAL)_Angle, (INTEGER)_BoolConvertAngleTo360Degrees)
THEN
LeaderLib_Math_RotatePoint(_x1, _z1, _Angle, _BoolConvertAngleTo360Degrees);

PROC
LeaderLib_Math_RotatePoint((REAL)_x1, (REAL)_z1, (REAL)_Angle, 1)
AND
NOT DB_LeaderLib_Math_RotatedPoint(_x1, _z1, _Angle, _, _)
AND
LeaderLib_Math_QRY_ConvertAngle(_Angle)
AND
DB_LeaderLib_Math_Angle(_Angle, _a2)
THEN
NOT DB_LeaderLib_Math_Angle(_Angle, _a2);
LeaderLib_Math_Internal_RotatePoint(_x1, _z1, _Angle, _a2);

PROC
LeaderLib_Math_RotatePoint((REAL)_x1, (REAL)_z1, (REAL)_Angle, 0)
AND
NOT DB_LeaderLib_Math_RotatedPoint(_x1, _z1, _Angle, _, _)
THEN
LeaderLib_Math_Internal_RotatePoint(_x1, _z1, _Angle, _Angle);

PROC
LeaderLib_Math_Internal_RotatePoint((REAL)_x1, (REAL)_z1, (REAL)_OriginalAngle, (REAL)_Angle)
AND
LeaderLib_Math_QRY_Sine(_Angle)
AND
LeaderLib_Math_QRY_Cosine(_Angle)
AND
DB_LeaderLib_Math_Sine(_Angle, _sine)
AND
DB_LeaderLib_Math_Cosine(_Angle, _cos)
AND
RealProduct(_x1, _cos, _tx1)
AND
RealProduct(_z1, _sine, _tx2)
AND
RealSubtract(_tx1, _tx2, _x2)
AND
RealProduct(_x1, _sine, _tz1)
AND
RealProduct(_z1, _cos, _tz2)
AND
RealSum(_tz1, _tz2, _z2)
THEN
NOT DB_LeaderLib_Math_Sine(_Angle, _sine);
NOT DB_LeaderLib_Math_Sine(_Angle, _cos);
DB_LeaderLib_Math_RotatedPoint(_x1, _z1, _OriginalAngle, _x2, _z2);
//END_REGION

//REGION MATCH_QUERIES
QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2)
AND
_Num == _Match1
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2)
AND
_Num == _Match2
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3)
AND
_Num == _Match1
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3)
AND
_Num == _Match2
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3)
AND
_Num == _Match3
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3, (INTEGER)_Match4)
AND
_Num == _Match1
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3, (INTEGER)_Match4)
AND
_Num == _Match2
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3, (INTEGER)_Match4)
AND
_Num == _Match3
THEN
DB_NOOP(1);

QRY
LeaderLib_Math_QRY_IsEqualToAny((INTEGER)_Num, (INTEGER)_Match1, (INTEGER)_Match2, (INTEGER)_Match3, (INTEGER)_Match4)
AND
_Num == _Match4
THEN
DB_NOOP(1);
//END_REGION

//REGION CLAMP
PROC
LeaderLib_Math_ClampInt((STRING)_ID, (INTEGER)_Value, (INTEGER)_Max, (INTEGER)_Min)
AND
DB_LeaderLib_Math_ClampInt(_ID, _Last)
THEN
NOT DB_LeaderLib_Math_ClampInt(_ID, _Last);

PROC
LeaderLib_Math_ClampInt((STRING)_ID, (INTEGER)_Value, (INTEGER)_Max, (INTEGER)_Min)
AND
_Value > _Max
THEN
DB_LeaderLib_Math_ClampInt(_ID, _Max);

PROC
LeaderLib_Math_ClampInt((STRING)_ID, (INTEGER)_Value, (INTEGER)_Max, (INTEGER)_Min)
AND
_Value <= _Max
AND
_Value > _Min
THEN
DB_LeaderLib_Math_ClampInt(_ID, _Value);

PROC
LeaderLib_Math_ClampInt((STRING)_ID, (INTEGER)_Value, (INTEGER)_Max, (INTEGER)_Min)
AND
_Value <= _Min
THEN
DB_LeaderLib_Math_ClampInt(_ID, _Min);

QRY
LeaderLib_Math_QRY_ClampInt((STRING)_ID, (INTEGER)_Value, (INTEGER)_Max, (INTEGER)_Min)
THEN
LeaderLib_Math_ClampInt(_ID, _Value, _Min, _Max);
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
