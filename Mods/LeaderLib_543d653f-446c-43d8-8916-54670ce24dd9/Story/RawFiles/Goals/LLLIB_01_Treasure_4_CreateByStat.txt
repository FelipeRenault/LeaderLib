Version 1
SubGoalCombiner SGC_AND
INITSECTION
//DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
//DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade)
//DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate)
//DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName)
//DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_ArrayName, _Character, _Dummy, _Stat)
KBSECTION
//REGION ITEM_SPAWNING
PROC
LeaderLib_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat)
THEN
LeaderLib_Treasure_CreateItemByStat_AddToQueue(_Character, _Stat, 1, 1, 0);

PROC
LeaderLib_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat, (INTEGER)_Amount)
THEN
LeaderLib_Treasure_CreateItemByStat_AddToQueue(_Character, _Stat, _Amount, 1, 0);

PROC
LeaderLib_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat, (INTEGER)_Amount, (INTEGER)_ShowInTrade)
THEN
LeaderLib_Treasure_CreateItemByStat_AddToQueue(_Character, _Stat, _Amount, _ShowInTrade, 0);

PROC
LeaderLib_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat, (INTEGER)_Amount, (INTEGER)_ShowInTrade, (INTEGER)_Equip)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _)
AND
Random(999999, _Ran)
AND
IntegertoString(_Ran, _RanStr)
AND
GetUUID(_Character, _ID)
AND
StringConcatenate("LLLIB_CreateByStat_", _RanStr, _ArrayName)
THEN
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName);
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat:AddToQueue] Assigned array name [",_ArrayName,"] to character [",_ID,"].");

PROC
LeaderLib_Treasure_CreateItemByStat_AddToQueue((CHARACTERGUID)_Character, (STRING)_Stat, (INTEGER)_Amount, (INTEGER)_ShowInTrade, (INTEGER)_Equip)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat:AddToQueue] Adding stat [",_Stat,"] to item queue for session [",_ArrayName,"].");
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount);
LeaderLib_Array_AddToArray(_ArrayName, _Stat);

PROC
LeaderLib_Treasure_CreateItemByStat_Start((CHARACTERGUID)_Character, (INTEGER)_TickRate)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _, _)
AND
GetUUID(_Character, _ID)
AND
StringConcatenate("LLLIB_Timers_Treasure_CreateByStat_", _ID, _TimerName)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat:Start] Timer [",_TimerName,"] created for [",_ID,"]. Starting queue.");
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate);
//LeaderLib_Treasure_CreateItemByStat_Internal_CreateNextStatItem(_Character);
LeaderLib_Treasure_CreateItemByStat_Internal_StartNextTick(_Character);

PROC
LeaderLib_Treasure_CreateItemByStat_Start((CHARACTERGUID)_Character, (INTEGER)_TickRate)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _, _)
AND
GetUUID(_Character, _ID)
THEN
LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat:Start] [ERROR] Error starting queue for [",_ID,"]. No timer was created?");

QRY
LeaderLib_Treasure_CreateItemByStat_QRY_JobDone((CHARACTERGUID)_Character)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _, _, _, _, _)
THEN
DB_NOOP(1);

QRY
LeaderLib_Treasure_CreateItemByStat_QRY_JobDone((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
AND
NOT DB_LLLIB_Array_Data(_ArrayName, _, _)
THEN
DB_NOOP(1);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_StartNextTick((CHARACTERGUID)_Character)
AND
NOT LeaderLib_Treasure_CreateItemByStat_QRY_JobDone(_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate)
THEN
TimerLaunch(_TimerName, _TickRate);

IF
TimerFinished(_TimerName)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate)
THEN
LeaderLib_Treasure_CreateItemByStat_Internal_CreateNextStatItem(_Character);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_CreateNextStatItem((CHARACTERGUID)_Character)
AND
LeaderLib_Treasure_CreateItemByStat_Internal_QRY_CheckForErrors(_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
AND
NOT DB_LLLIB_Array_Temp_PopValue(_ArrayName, _)
AND
LeaderLib_Array_QRY_Pop(_ArrayName)
AND
DB_LLLIB_Array_Temp_PopValue(_ArrayName, _Stat)
THEN
LeaderLib_Treasure_CreateItemByStat_Internal_ProcessNextStat(_Character, _ArrayName, _Stat);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_ProcessNextStat((CHARACTERGUID)_Character, (STRING)_ArrayName, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount)
AND
LeaderLib_Treasure_QRY_PrepareGeneratorDummy((GUIDSTRING)_Character, _ArrayName)
AND
DB_LLLIB_Treasure_NextGeneratorDummy(_Dummy, _ArrayName)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] Creating [",_Stat,"] on dummy with ID [",_ArrayName,"]");
DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_ArrayName, (CHARACTERGUID)_Character, _Dummy, _Stat);
SetVarFixedString(_Dummy, "LeaderLib_CreateByStat_NextStatToCreate", _Stat);
//SetVarFixedString(_Dummy, "LeaderLib_CreateByStat_FlagToSet", "LLLIB_GeneratorDummy_CreatedItem");
SetVarInteger(_Dummy, "LeaderLib_CreateByStat_ShowInTrade", _ShowInTrade);
SetVarInteger(_Dummy, "LeaderLib_CreateByStat_AmountToCreate", _Amount);
ObjectSetFlag(_Dummy, "LeaderLib_CreateByStat_ResetVars");
LeaderLib_Treasure_CreateItemByStat_Internal_StartTimeoutTimer((CHARACTERGUID)_Character, _Stat);
SetStoryEvent(_Dummy, "LeaderLib_Commands_CreateItemByStat");

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_ProcessNextStat((CHARACTERGUID)_Character, (STRING)_ArrayName, (STRING)_Stat)
AND
DB_LLLIB_Array_Temp_PopValue(_ArrayName, _Stat)
THEN
NOT DB_LLLIB_Array_Temp_PopValue(_ArrayName, _Stat);

IF
ItemAddedToCharacter(_Item, _Dummy)
AND
GetVarString(_Dummy, "LeaderLib_DummyID", _DummyID)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_DummyID, _Character, _Dummy, _Stat)
AND
GetTemplate(_Item, _ItemTemplate)
THEN
LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] Created [",_ItemTemplate,"] from stat [",_Stat,"] on dummy [",_DummyID,"].");
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_DummyID, _Character, _Dummy, _Stat);
LeaderLib_Treasure_CreateItemByStat_Internal_CancelTimeoutTimer(_Character, _Stat);
SetVarFixedString(_Item, "LeaderLib_GeneratedItemStat", _Stat);
DB_LLLIB_Treasure_StatToTemplate(_Stat, _ItemTemplate);
ItemToInventory(_Item, _Character, 1, 0, 1);
LeaderLib_Treasure_CreateItemByStat_Internal_EquipCreatedStatItem(_Character, _Item, _Stat);
LeaderLib_Treasure_CreateItemByStat_Internal_ClearFromQueue(_Character, _Stat);
LeaderLib_Treasure_CreateItemByStat_Internal_StartNextTick(_Character);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_EquipCreatedStatItem((CHARACTERGUID)_Character, (ITEMGUID)_Item, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount)
AND
_Equip > 0
THEN
CharacterEquipItem(_Character, _Item);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_StartNextTick((CHARACTERGUID)_Character)
AND
LeaderLib_Treasure_CreateItemByStat_QRY_JobDone(_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] Job finished. Cleaning up databases.");
LeaderLib_Array_ClearArray(_ArrayName);
LeaderLib_Treasure_ResetDummyByID(_ArrayName);
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName);
LeaderLib_Treasure_CreateItemByStat_Cleanup(_Character);
//END_REGION

//REGION TIMEOUT
PROC
LeaderLib_Treasure_CreateItemByStat_Internal_CancelTimeoutTimer((CHARACTERGUID)_Character, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName)
THEN
TimerCancel(_TimerName);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_StartTimeoutTimer((CHARACTERGUID)_Character, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName)
THEN
TimerCancel(_TimerName);
TimerLaunch(_TimerName, 5000);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_StartTimeoutTimer((CHARACTERGUID)_Character, (STRING)_Stat)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _, _)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
AND
StringConcatenate("LLLIB_Timers_Treasure_CreateByStat_Timeout_", _ArrayName, _TimerName)
THEN
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName);
TimerLaunch(_TimerName, 5000);

IF
TimerFinished(_TimerName)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName)
THEN
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName);
LeaderLib_Treasure_CreateItemByStat_Internal_ClearFromQueue(_Character, _Stat);
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] Failed to create item by stat [",_Stat,"](timeout timer finished). Starting next tick.");
LeaderLib_Treasure_CreateItemByStat_Internal_StartNextTick(_Character);
//END_REGION

//REGION CLEARING
PROC
LeaderLib_Treasure_CreateItemByStat_Internal_ClearFromQueue((CHARACTERGUID)_Character, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_ArrayName, _Character, _Dummy, _Stat)
THEN
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_ArrayName, _Character, _Dummy, _Stat);

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_ClearFromQueue((CHARACTERGUID)_Character, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount)
THEN
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount);

PROC
LeaderLib_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_ArrayName, _Character, _Dummy, _Stat)
THEN
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget(_ArrayName, _Character, _Dummy, _Stat);

PROC
LeaderLib_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount)
THEN
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount);

PROC
LeaderLib_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate)
THEN
TimerCancel(_TimerName);
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer(_Character, _TimerName, _TickRate);

PROC
LeaderLib_Treasure_CreateItemByStat_Cleanup((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName)
THEN
TimerCancel(_TimerName);
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer(_Character, _Stat, _TimerName);
//END_REGION

//REGION DEBUG
/*
IF
ItemAddedToCharacter(_Item, _Dummy)
AND
GetTemplate(_Dummy, "LLLIB_GeneratorDummy_24a5d60b-680b-4fbc-9b2c-19061a261297")
AND
GetVarString(_Dummy, "LeaderLib_DummyID", _DummyID)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] Item added to dummy with ID [",_DummyID,"].");
*/

/*
QRY
LeaderLib_Treasure_CreateItemByStat_Internal_QRY_CheckForErrors((CHARACTERGUID)_Character)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _ArrayName)
AND
NOT DB_LLLIB_Array_Temp_PopValue(_ArrayName, _)
AND
GetUUID(_Character, _ID)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] [ERROR] No pop value for array [",_ArrayName,"] assigned to [",_ID,"].");
*/

/*
PROC
LeaderLib_Treasure_CreateItemByStat_Internal_ProcessNextStat((CHARACTERGUID)_Character, (STRING)_ArrayName, (STRING)_Stat)
AND
GetUUID(_Character, _ID)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:ProcessNextStat] Processing [",_Stat,"] on character [",_ID,"] with array [",_ArrayName,"]");

PROC
LeaderLib_Treasure_CreateItemByStat_Internal_ProcessNextStat((CHARACTERGUID)_Character, (STRING)_ArrayName, (STRING)_Stat)
AND
DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue(_Character, _ArrayName, _Stat, _Equip, _ShowInTrade, _Amount)
AND
NOT DB_LLLIB_Treasure_NextGeneratorDummy(_, _ArrayName)
AND
GetUUID(_Character, _ID)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat:ProcessNextStat] [ERROR] No dummy was assigned to [",_ArrayName,"] for character [",_ID,"].");

QRY
LeaderLib_Treasure_CreateItemByStat_Internal_QRY_CheckForErrors((CHARACTERGUID)_Character)
AND
NOT DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray(_Character, _)
AND
GetUUID(_Character, _ID)
THEN
//LeaderLog_Log("TRACE", "[LeaderLib:Treasure:CreateItemByStat] [ERROR] No array assigned to [",_ID,"].");
*/

QRY
LeaderLib_Treasure_CreateItemByStat_Internal_QRY_CheckForErrors((CHARACTERGUID)_Character)
THEN
DB_NOOP(1);
//END_REGION

//REGION UPDATER
PROC
LLLIB_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_CreateByStat", "DB_LLLIB_Treasure_Temp_CreateItemByStat_CharacterArray", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_CreateByStat", "DB_LLLIB_Treasure_Temp_CreateItemByStat_ItemQueue", 4);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_CreateByStat", "DB_LLLIB_Treasure_Temp_CreateItemByStat_QueueTimer", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_CreateByStat", "DB_LLLIB_Treasure_Temp_CreateItemByStat_TimeoutTimer", 3);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Treasure_CreateByStat", "DB_LLLIB_Treasure_Temp_CreateItemByStat_DummyTarget", 4);
LeaderLog_Log("TRACE", "[LeaderLib:Treasure_CreateByStat] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
