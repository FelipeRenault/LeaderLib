Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Settings_InitSettings();

//DB_LeaderLib_EquipmentSlots(_Slot)
//DB_LeaderLib_Settings_ItemTemplates(_Name, _ItemTemplate)
//DB_LeaderLib_Settings_DialogVariables(_VariableName, _VariableValue)
//DB_LeaderLib_Settings_QueueRates(_ReferenceName, _TickRate, _TimeoutRate)
//DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str)
//DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _Str)
KBSECTION
//REGION SETTINGS
PROC
LeaderLib_Settings_InitSettings()
THEN
LeaderLib_Settings_InitEquipmentSlots();
LeaderLib_Settings_InitStats();

SysClear("DB_LeaderLib_Settings_QueueRates", 3);
DB_LeaderLib_Settings_QueueRates("TraderSpawn", 500, 2000);
DB_LeaderLib_Settings_QueueRates("TraderCheck", 100, 500);
DB_LeaderLib_Settings_QueueRates("Treasure", 100, 60000);
DB_LeaderLib_Settings_QueueRates("ItemGeneration", 0, 5000);

SysClear("DB_LeaderLib_Settings_ItemTemplates", 2);
DB_LeaderLib_Settings_ItemTemplates("Book_ModMenu", "BOOK_LeaderLib_ModMenu_646a1194-3383-47fa-a379-ebefa3d2b108");

SysClear("DB_LeaderLib_Settings_DialogVariables", 2);
DB_LeaderLib_Settings_DialogVariables("PlayerName", "LeaderLib_PlayerName_6c5b9559-53e3-47f7-8881-309a930e4be3");
DB_LeaderLib_Settings_DialogVariables("SpeakerName", "LeaderLib_SpeakerName_9fc648d4-7984-44e7-afa4-b8a07f21185b");
DB_LeaderLib_Settings_DialogVariables("ModMenu_PageInfo", "LeaderLib_ModMenu_PageInfo_2b744313-9239-412c-80a8-f3b5e8b56156");
DB_LeaderLib_Settings_DialogVariables("ModList", "LeaderLib_Settings_ModList_50c55fbe-ad1e-490e-92d1-8836ca42ca12");

PROC
LeaderLib_Settings_InitEquipmentSlots()
AND
NOT DB_LeaderLib_EquipmentSlots(_)
THEN
DB_LeaderLib_EquipmentSlots("Weapon");
DB_LeaderLib_EquipmentSlots("Shield");
DB_LeaderLib_EquipmentSlots("Helmet");
DB_LeaderLib_EquipmentSlots("Breast");
DB_LeaderLib_EquipmentSlots("Leggings");
DB_LeaderLib_EquipmentSlots("Ring");
DB_LeaderLib_EquipmentSlots("Belt");
DB_LeaderLib_EquipmentSlots("Boots");
DB_LeaderLib_EquipmentSlots("Gloves");
DB_LeaderLib_EquipmentSlots("Amulet");
DB_LeaderLib_EquipmentSlots("Ring2");

PROC
LeaderLib_Settings_InitEquipmentSlots()
AND
LeaderLib_Array_QRY_EmptyLength("LeaderLib_EquipmentSlots")
AND
DB_LeaderLib_EquipmentSlots(_Slot)
THEN
LeaderLib_Array_AddToArray("LeaderLib_EquipmentSlots", _Slot);

PROC
LeaderLib_Settings_InitStats()
AND
NOT DB_LeaderLib_Attributes(_)
THEN
DB_LeaderLib_Attributes("Strength");
DB_LeaderLib_Attributes("Finesse");
DB_LeaderLib_Attributes("Intelligence");
DB_LeaderLib_Attributes("Constitution");
DB_LeaderLib_Attributes("Memory");
DB_LeaderLib_Attributes("Wits");


PROC
LeaderLib_Settings_InitStats()
AND
NOT DB_LeaderLib_Abilities(_)
THEN
DB_LeaderLib_Abilities("WarriorLore");
DB_LeaderLib_Abilities("RangerLore");
DB_LeaderLib_Abilities("RogueLore");
DB_LeaderLib_Abilities("SingleHanded");
DB_LeaderLib_Abilities("TwoHanded");
DB_LeaderLib_Abilities("Reflection");
DB_LeaderLib_Abilities("Ranged");
DB_LeaderLib_Abilities("Shield");
DB_LeaderLib_Abilities("Reflexes");
DB_LeaderLib_Abilities("PhysicalArmorMastery");
DB_LeaderLib_Abilities("Sourcery");
DB_LeaderLib_Abilities("Telekinesis");
DB_LeaderLib_Abilities("FireSpecialist");
DB_LeaderLib_Abilities("WaterSpecialist");
DB_LeaderLib_Abilities("AirSpecialist");
DB_LeaderLib_Abilities("EarthSpecialist");
DB_LeaderLib_Abilities("Necromancy");
DB_LeaderLib_Abilities("Summoning");
DB_LeaderLib_Abilities("Polymorph");
DB_LeaderLib_Abilities("Repair");
DB_LeaderLib_Abilities("Sneaking");
DB_LeaderLib_Abilities("Pickpocket");
DB_LeaderLib_Abilities("Thievery");
DB_LeaderLib_Abilities("Loremaster");
DB_LeaderLib_Abilities("Crafting");
DB_LeaderLib_Abilities("Barter");
DB_LeaderLib_Abilities("Charm");
DB_LeaderLib_Abilities("Intimidate");
DB_LeaderLib_Abilities("Reason");
DB_LeaderLib_Abilities("Persuasion");
DB_LeaderLib_Abilities("Leadership");
DB_LeaderLib_Abilities("Luck");
DB_LeaderLib_Abilities("DualWielding");
DB_LeaderLib_Abilities("Wand");
DB_LeaderLib_Abilities("MagicArmorMastery");
DB_LeaderLib_Abilities("VitalityMastery");
DB_LeaderLib_Abilities("Perseverance");
DB_LeaderLib_Abilities("Runecrafting");
DB_LeaderLib_Abilities("Brewmaster");

PROC
LeaderLib_Settings_InitStats()
AND
NOT DB_LeaderLib_Talents(_)
THEN
DB_LeaderLib_Talents("ActionPoints");
DB_LeaderLib_Talents("ActionPoints2");
DB_LeaderLib_Talents("AirSpells");
DB_LeaderLib_Talents("AnimalEmpathy");
DB_LeaderLib_Talents("AttackOfOpportunity	Opportunist");
DB_LeaderLib_Talents("AvoidDetection");
DB_LeaderLib_Talents("Awareness");
DB_LeaderLib_Talents("Backstab");
DB_LeaderLib_Talents("Beastmaster");
DB_LeaderLib_Talents("Bully");
DB_LeaderLib_Talents("Carry");
DB_LeaderLib_Talents("ChanceToHitMelee");
DB_LeaderLib_Talents("ChanceToHitRanged");
DB_LeaderLib_Talents("Charm");
DB_LeaderLib_Talents("Courageous");
DB_LeaderLib_Talents("Criticals");
DB_LeaderLib_Talents("Damage");
DB_LeaderLib_Talents("Demon");
DB_LeaderLib_Talents("DualWieldingDodging");
DB_LeaderLib_Talents("Durability");
DB_LeaderLib_Talents("Dwarf_Sneaki");
DB_LeaderLib_Talents("Dwarf_Strength");
DB_LeaderLib_Talents("EarthSpells");
DB_LeaderLib_Talents("ElementalAffinity");
DB_LeaderLib_Talents("ElementalRanger");
DB_LeaderLib_Talents("Elf_CorpseEating");
DB_LeaderLib_Talents("Elf_Finesse");
DB_LeaderLib_Talents("Escapist");
DB_LeaderLib_Talents("Executioner");
DB_LeaderLib_Talents("ExpGain");
DB_LeaderLib_Talents("ExtraSkillPoints");
DB_LeaderLib_Talents("ExtraStatPoints");
DB_LeaderLib_Talents("ExtraWandCharge");
DB_LeaderLib_Talents("FaroutDude");
DB_LeaderLib_Talents("FireSpells");
DB_LeaderLib_Talents("FiveStarRestaurant");
DB_LeaderLib_Talents("Flanking");
DB_LeaderLib_Talents("FolkDancer");
DB_LeaderLib_Talents("GoldenMage");
DB_LeaderLib_Talents("Human_Civil");
DB_LeaderLib_Talents("Human_Wits");
DB_LeaderLib_Talents("IceKing");
DB_LeaderLib_Talents("IncreasedArmor");
DB_LeaderLib_Talents("Initiative");
DB_LeaderLib_Talents("Intimidate");
DB_LeaderLib_Talents("InventoryAccess");
DB_LeaderLib_Talents("ItemCreation");
DB_LeaderLib_Talents("ItemMovement");
DB_LeaderLib_Talents("Kickstarter");
DB_LeaderLib_Talents("Kinetics");
DB_LeaderLib_Talents("Leech");
DB_LeaderLib_Talents("LightStep");
DB_LeaderLib_Talents("LightningRod");
DB_LeaderLib_Talents("Lizard_Intelligence");
DB_LeaderLib_Talents("Lizard_Persuasion");
DB_LeaderLib_Talents("Lockpick");
DB_LeaderLib_Talents("LoneWolf");
DB_LeaderLib_Talents("Luck");
DB_LeaderLib_Talents("Memory");
DB_LeaderLib_Talents("MrKnowItAll");
DB_LeaderLib_Talents("NoAttackOfOpportunity");
DB_LeaderLib_Talents("Perfectionist");
DB_LeaderLib_Talents("Politician");
DB_LeaderLib_Talents("Quest_GhostTree");
DB_LeaderLib_Talents("Quest_SpidersKiss_Int");
DB_LeaderLib_Talents("Quest_SpidersKiss_Null");
DB_LeaderLib_Talents("Quest_SpidersKiss_Per");
DB_LeaderLib_Talents("Quest_SpidersKiss_Str");
DB_LeaderLib_Talents("Quest_TradeSecrets");
DB_LeaderLib_Talents("QuickStep");
DB_LeaderLib_Talents("Raistlin");
DB_LeaderLib_Talents("RangerLoreArrowRecover");
DB_LeaderLib_Talents("RangerLoreEvasionBonus");
DB_LeaderLib_Talents("RangerLoreRangedAPBonus");
DB_LeaderLib_Talents("Reason");
DB_LeaderLib_Talents("Repair");
DB_LeaderLib_Talents("ResistDead");
DB_LeaderLib_Talents("ResistFear");
DB_LeaderLib_Talents("ResistKnockdown");
DB_LeaderLib_Talents("ResistPoison");
DB_LeaderLib_Talents("ResistSilence");
DB_LeaderLib_Talents("ResistStun");
DB_LeaderLib_Talents("ResurrectToFullHealth");
DB_LeaderLib_Talents("RogueLoreDaggerAPBonus");
DB_LeaderLib_Talents("RogueLoreDaggerBackStab");
DB_LeaderLib_Talents("RogueLoreGrenadePrecision");
DB_LeaderLib_Talents("RogueLoreHoldResistance");
DB_LeaderLib_Talents("RogueLoreMovementBonus");
DB_LeaderLib_Talents("Scientist");
DB_LeaderLib_Talents("Sight");
DB_LeaderLib_Talents("SpillNoBlood");
DB_LeaderLib_Talents("StandYourGround");
DB_LeaderLib_Talents("Stench");
DB_LeaderLib_Talents("SurpriseAttack");
DB_LeaderLib_Talents("Trade");
DB_LeaderLib_Talents("ViolentMagic");
DB_LeaderLib_Talents("Vitality");
DB_LeaderLib_Talents("WalkItOff");
DB_LeaderLib_Talents("WarriorLoreGrenadeRange");
DB_LeaderLib_Talents("WarriorLoreN");
DB_LeaderLib_Talents("WarriorLoreNaturalHealth");
DB_LeaderLib_Talents("WarriorLoreNaturalResistance");
DB_LeaderLib_Talents("WaterSpells");
DB_LeaderLib_Talents("WeatherProof");
DB_LeaderLib_Talents("WhatARush");
DB_LeaderLib_Talents("Zombie");
//END_REGION

//REGION UPDATER
PROC
LeaderUpdater_ModUpdated("LeaderLib", "LaughingLeader", (STRING)_PastVersion, (STRING)_NewVersion)
AND
LeaderLib_StringExt_QRY_VersionIsLessThan(_PastVersion, 1, 0, 1, 1)
THEN
LeaderLog_Log("SYSTEM", "[LeaderLib:Settings] Updated settings from version [",_PastVersion,"].");
LeaderLib_Settings_InitStats();
//END_REGION

//REGION MOD_DATA
IF
ObjectFlagSet("LeaderLib_Settings_ListMods", _Player, _Instance)
THEN
ObjectClearFlag(_Player, "LeaderLib_Settings_ListMods");
LeaderLib_Settings_BuildModList();

PROC
LeaderLib_Settings_BuildModList()
AND
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _Str)
THEN
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _Str);

PROC
LeaderLib_Settings_BuildModList()
AND
NOT DB_LeaderLib_Settings_Temp_RegisteredModsList(_)
THEN
DB_LeaderLib_Settings_Temp_RegisteredModsList("");

QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
LeaderUpdater_QRY_ModRegisteredActiveGoal(_ModID, _Author)
AND
LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(Active)</b>");

QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
LeaderUpdater_QRY_ModRegisteredActiveGoal(_ModID, _Author)
AND
NOT LeaderUpdater_QRY_ModIsActive(_ModID, _Author)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(Deactivated)</b>");

QRY
LeaderLib_Settings_QRY_SetActiveText((STRING)_ModID, (STRING)_Author)
AND
NOT LeaderUpdater_QRY_ModRegisteredActiveGoal(_ModID, _Author)
THEN
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, " <b>(No Active Goal Registered)</b>");

PROC
LeaderLib_Settings_BuildModList()
AND
DB_Mods_Registered(_ModID, _Author, _Version)
AND
DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str)
AND
StringConcatenate("<b>", _ModID, _NameStr)
AND
LeaderLib_Settings_QRY_SetActiveText(_ModID, _Author)
AND
DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _ActiveStr)
AND
LeaderLog_QRY_Log("COMBINE", _Str, _NameStr, "</b> (", _Version, ") by ",_Author, _ActiveStr, "<br>")
AND
DB_LeaderLog_Temp_CombinedString(_CombinedStr)
THEN
NOT DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str);
DB_LeaderLib_Settings_Temp_RegisteredModsList(_CombinedStr);
NOT DB_LeaderLog_Temp_CombinedString(_CombinedStr);
NOT DB_LeaderLib_Settings_Temp_ActiveModText(_ModID, _Author, _ActiveStr);

PROC
LeaderLib_Settings_BuildModList()
AND
DB_LeaderLib_Settings_DialogVariables("ModList", _DialogVar)
AND
DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str)
THEN
DialogSetVariableString("LeaderLib_SettingsMenu", _DialogVar, _Str);
NOT DB_LeaderLib_Settings_Temp_RegisteredModsList(_Str);
//END_REGION

//REGION SETTINGS_MENU
IF
DialogStarted("LeaderLib_SettingsMenu", _Instance)
THEN
LeaderLib_Settings_BuildModList();
//END_REGION

//REGION INITIAL_MOD_BOOKS
IF
GameStarted(_Level,_)
AND
IsCharacterCreationLevel(_Level, 0)
AND
NOT GlobalGetFlag("LeaderLib_AddedInitialModMenuBooks", 1)
AND
DB_LeaderLib_Settings_ItemTemplates("Book_ModMenu", _ModMenuBookTemplate)
AND
DB_IsPlayer(_Player)
AND
ItemTemplateIsInUserInventory(_Player, _ModMenuBookTemplate, 0, 0)
THEN
ItemTemplateAddTo(_ModMenuBookTemplate, _Player, 1);
LeaderLib_Settings_Internal_OnModMenuBooksAddedToParty();

PROC
LeaderLib_Settings_Internal_OnModMenuBooksAddedToParty()
AND
NOT GlobalGetFlag("LeaderLib_AddedInitialModMenuBooks", 1)
THEN
GlobalSetFlag("LeaderLib_AddedInitialModMenuBooks");

IF
ObjectFlagSet("LeaderLib_Commands_GiveModMenuBook", _Object, _Instance)
AND
LeaderLib_Helper_QRY_ClearObjectFlag(_Object, "LeaderLib_Commands_GiveModMenuBook")
AND
DB_LeaderLib_Settings_ItemTemplates("Book_ModMenu", _ModMenuBookTemplate)
THEN
ItemTemplateAddTo(_ModMenuBookTemplate, _Object, 1, 1);

//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LeaderLib_11__Start"
