Version 1
SubGoalCombiner SGC_AND
INITSECTION
LLLIB_Codex_InitSettings();

//DB_LLLIB_Codex(_Index,_AlphanumericChar)
//DB_LLLIB_Codex_Iterator(_Index, _IndexStr)
//DB_LLLIB_CodexCount(_Max)
KBSECTION
PROC
LLLIB_Codex_InitSettings()
THEN
LeaderUpdater_SaveSettingsVersionData("LLLIB_Settings_Codex");
LLLIB_Codex_BuildIterator(256);
LLLIB_Codex_BuildCodex();

//REGION CODEX
PROC
LLLIB_Codex_AddToCodex((STRING)_AlphanumericChar)
AND
NOT DB_LLLIB_Codex(_,_AlphanumericChar)
AND
SysCount("DB_LLLIB_Codex", 2, _Index)
THEN
DB_LLLIB_Codex(_Index, _AlphanumericChar);

PROC
LLLIB_Codex_BuildCodex()
AND
NOT DB_LLLIB_Codex(_,_)
THEN
/*Windows-like sort order
Symbols
Numbers
Letters
*/

LLLIB_Codex_AddToCodex(" ");
LLLIB_Codex_AddToCodex("!");
//LLLIB_Codex_AddToCodex('"');
LLLIB_Codex_AddToCodex("#");
LLLIB_Codex_AddToCodex("$");
LLLIB_Codex_AddToCodex("%");
LLLIB_Codex_AddToCodex("&");
LLLIB_Codex_AddToCodex("'");
LLLIB_Codex_AddToCodex("(");
LLLIB_Codex_AddToCodex(")");
LLLIB_Codex_AddToCodex("*");
LLLIB_Codex_AddToCodex("+");
LLLIB_Codex_AddToCodex(",");
LLLIB_Codex_AddToCodex("-");
LLLIB_Codex_AddToCodex(".");
LLLIB_Codex_AddToCodex("/");

LLLIB_Codex_AddToCodex(":");
LLLIB_Codex_AddToCodex(";");
LLLIB_Codex_AddToCodex("<");
LLLIB_Codex_AddToCodex("=");
LLLIB_Codex_AddToCodex(">");
LLLIB_Codex_AddToCodex("?");
LLLIB_Codex_AddToCodex("@");

LLLIB_Codex_AddToCodex("[");
//LLLIB_Codex_AddToCodex("\");
LLLIB_Codex_AddToCodex("]");
//LLLIB_Codex_AddToCodex("^");
LLLIB_Codex_AddToCodex("_");
LLLIB_Codex_AddToCodex("`");

LLLIB_Codex_AddToCodex("}");
LLLIB_Codex_AddToCodex("|");
LLLIB_Codex_AddToCodex("{");
LLLIB_Codex_AddToCodex("~");

LLLIB_Codex_AddToCodex("0");
LLLIB_Codex_AddToCodex("1");
LLLIB_Codex_AddToCodex("2");
LLLIB_Codex_AddToCodex("3");
LLLIB_Codex_AddToCodex("4");
LLLIB_Codex_AddToCodex("5");
LLLIB_Codex_AddToCodex("6");
LLLIB_Codex_AddToCodex("7");
LLLIB_Codex_AddToCodex("8");
LLLIB_Codex_AddToCodex("9");

//String Sub isn't case-sensitive for some reason
LLLIB_Codex_AddToCodex("A");
LLLIB_Codex_AddToCodex("B");
LLLIB_Codex_AddToCodex("C");
LLLIB_Codex_AddToCodex("D");
LLLIB_Codex_AddToCodex("E");
LLLIB_Codex_AddToCodex("F");
LLLIB_Codex_AddToCodex("G");
LLLIB_Codex_AddToCodex("H");
LLLIB_Codex_AddToCodex("I");
LLLIB_Codex_AddToCodex("J");
LLLIB_Codex_AddToCodex("K");
LLLIB_Codex_AddToCodex("L");
LLLIB_Codex_AddToCodex("M");
LLLIB_Codex_AddToCodex("N");
LLLIB_Codex_AddToCodex("O");
LLLIB_Codex_AddToCodex("P");
LLLIB_Codex_AddToCodex("Q");
LLLIB_Codex_AddToCodex("R");
LLLIB_Codex_AddToCodex("S");
LLLIB_Codex_AddToCodex("T");
LLLIB_Codex_AddToCodex("U");
LLLIB_Codex_AddToCodex("V");
LLLIB_Codex_AddToCodex("W");
LLLIB_Codex_AddToCodex("X");
LLLIB_Codex_AddToCodex("Y");
LLLIB_Codex_AddToCodex("Z");

PROC
LLLIB_Codex_BuildCodex()
AND
SysCount("DB_LLLIB_Codex", 2, _Max)
THEN
SysClear("DB_LLLIB_CodexCount", 1);
DB_LLLIB_CodexCount(_Max);
//END_REGION

//REGION CHAR_ITERATOR
PROC
LLLIB_Codex_Internal_ClearOldIterator()
AND
SysCount("DB_LLLIB_Codex_Iterator", 1, _Count)
AND
_Count > 0
THEN
SysClear("DB_LLLIB_Codex_Iterator", 1);
LeaderUpdater_Clear_RegisteredDatabase("LeaderLib", "LaughingLeader", "DB_LLLIB_Codex_Iterator");
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LLLIB_Codex_Iterator", 2);

PROC
LLLIB_Codex_BuildIterator((INTEGER)_Max)
AND
NOT DB_LLLIB_Codex_Iterator(_,_)
THEN
LLLIB_Codex_Internal_ClearOldIterator();
SysClear("DB_LLLIB_Temp_BuildSortIterator", 2);
DB_LLLIB_Temp_BuildSortIterator(0, _Max);

IF
DB_LLLIB_Temp_BuildSortIterator(_Index, _Max)
THEN
LLLIB_Codex_OnSortIterator(_Index, _Max);

PROC
LLLIB_Codex_OnSortIterator((INTEGER)_Index, (INTEGER)_Max)
AND
_Index < _Max
AND
IntegerSum(_Index, 1, _NextIndex)
AND
IntegertoString(_Index, _IndexStr)
THEN
DB_LLLIB_Codex_Iterator(_Index, _IndexStr);
NOT DB_LLLIB_Temp_BuildSortIterator(_Index, _Max);
DB_LLLIB_Temp_BuildSortIterator(_NextIndex, _Max);

PROC
LLLIB_Codex_OnSortIterator((INTEGER)_Index, (INTEGER)_Max)
AND
_Index >= _Max
AND
DB_LLLIB_Temp_BuildSortIterator(_Index, _Max)
THEN
NOT DB_LLLIB_Temp_BuildSortIterator(_Index, _Max);
//END_REGION

//REGION UPDATER
IF
StoryEvent(_,"LeaderLib_Events_Internal_OnUpdateSettings")
AND
LeaderUpdater_QRY_SettingsNeedsUpdate("LLLIB_Settings_Codex")
THEN
LLLIB_Codex_InitSettings();
LeaderLog_Log("SYSTEM", "[LeaderLib:Codex] Settings updated.");

PROC
LLLIB_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LLLIB_Codex", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LLLIB_Codex_Iterator", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LLLIB_CodexCount", 1);
LeaderLog_Log("TRACE", "[LeaderLib:Codex] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
