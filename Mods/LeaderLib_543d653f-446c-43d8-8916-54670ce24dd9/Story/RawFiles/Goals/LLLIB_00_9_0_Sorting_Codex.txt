Version 1
SubGoalCombiner SGC_AND
INITSECTION
LeaderLib_Codex_InitSettings();

//DB_LeaderLibCodex(_Index,_AlphanumericChar)
//DB_LeaderLibCodex_Iterator(_Index, _IndexStr)
//DB_LeaderLibCodexCount(_Max)
KBSECTION
PROC
LeaderLib_Codex_InitSettings()
THEN
LeaderUpdater_SaveSettingsVersionData("LLLIB_Settings_Codex");
LeaderLib_Codex_BuildIterator(256);
LeaderLib_Codex_BuildCodex();

//REGION CODEX
PROC
LeaderLib_Codex_AddToCodex((STRING)_AlphanumericChar)
AND
NOT DB_LeaderLibCodex(_,_AlphanumericChar)
AND
SysCount("DB_LeaderLibCodex", 2, _Index)
THEN
DB_LeaderLibCodex(_Index, _AlphanumericChar);

PROC
LeaderLib_Codex_BuildCodex()
AND
NOT DB_LeaderLibCodex(_,_)
THEN
/*Windows-like sort order
Symbols
Numbers
Letters
*/

LeaderLib_Codex_AddToCodex(" ");
LeaderLib_Codex_AddToCodex("!");
//LLLIB_Codex_AddToCodex('"');
LeaderLib_Codex_AddToCodex("#");
LeaderLib_Codex_AddToCodex("$");
LeaderLib_Codex_AddToCodex("%");
LeaderLib_Codex_AddToCodex("&");
LeaderLib_Codex_AddToCodex("'");
LeaderLib_Codex_AddToCodex("(");
LeaderLib_Codex_AddToCodex(")");
LeaderLib_Codex_AddToCodex("*");
LeaderLib_Codex_AddToCodex("+");
LeaderLib_Codex_AddToCodex(",");
LeaderLib_Codex_AddToCodex("-");
LeaderLib_Codex_AddToCodex(".");
LeaderLib_Codex_AddToCodex("/");

LeaderLib_Codex_AddToCodex(":");
LeaderLib_Codex_AddToCodex(";");
LeaderLib_Codex_AddToCodex("<");
LeaderLib_Codex_AddToCodex("=");
LeaderLib_Codex_AddToCodex(">");
LeaderLib_Codex_AddToCodex("?");
LeaderLib_Codex_AddToCodex("@");

LeaderLib_Codex_AddToCodex("[");
//LLLIB_Codex_AddToCodex("\");
LeaderLib_Codex_AddToCodex("]");
//LLLIB_Codex_AddToCodex("^");
LeaderLib_Codex_AddToCodex("_");
LeaderLib_Codex_AddToCodex("`");

LeaderLib_Codex_AddToCodex("}");
LeaderLib_Codex_AddToCodex("|");
LeaderLib_Codex_AddToCodex("{");
LeaderLib_Codex_AddToCodex("~");

LeaderLib_Codex_AddToCodex("0");
LeaderLib_Codex_AddToCodex("1");
LeaderLib_Codex_AddToCodex("2");
LeaderLib_Codex_AddToCodex("3");
LeaderLib_Codex_AddToCodex("4");
LeaderLib_Codex_AddToCodex("5");
LeaderLib_Codex_AddToCodex("6");
LeaderLib_Codex_AddToCodex("7");
LeaderLib_Codex_AddToCodex("8");
LeaderLib_Codex_AddToCodex("9");

//String Sub isn't case-sensitive for some reason
LeaderLib_Codex_AddToCodex("A");
LeaderLib_Codex_AddToCodex("B");
LeaderLib_Codex_AddToCodex("C");
LeaderLib_Codex_AddToCodex("D");
LeaderLib_Codex_AddToCodex("E");
LeaderLib_Codex_AddToCodex("F");
LeaderLib_Codex_AddToCodex("G");
LeaderLib_Codex_AddToCodex("H");
LeaderLib_Codex_AddToCodex("I");
LeaderLib_Codex_AddToCodex("J");
LeaderLib_Codex_AddToCodex("K");
LeaderLib_Codex_AddToCodex("L");
LeaderLib_Codex_AddToCodex("M");
LeaderLib_Codex_AddToCodex("N");
LeaderLib_Codex_AddToCodex("O");
LeaderLib_Codex_AddToCodex("P");
LeaderLib_Codex_AddToCodex("Q");
LeaderLib_Codex_AddToCodex("R");
LeaderLib_Codex_AddToCodex("S");
LeaderLib_Codex_AddToCodex("T");
LeaderLib_Codex_AddToCodex("U");
LeaderLib_Codex_AddToCodex("V");
LeaderLib_Codex_AddToCodex("W");
LeaderLib_Codex_AddToCodex("X");
LeaderLib_Codex_AddToCodex("Y");
LeaderLib_Codex_AddToCodex("Z");

PROC
LeaderLib_Codex_BuildCodex()
AND
SysCount("DB_LeaderLibCodex", 2, _Max)
THEN
SysClear("DB_LeaderLibCodexCount", 1);
DB_LeaderLibCodexCount(_Max);
//END_REGION

//REGION CHAR_ITERATOR
PROC
LeaderLib_Codex_Internal_ClearOldIterator()
AND
SysCount("DB_LeaderLibCodex_Iterator", 1, _Count)
AND
_Count > 0
THEN
SysClear("DB_LeaderLibCodex_Iterator", 1);
LeaderUpdater_Clear_RegisteredDatabase("LeaderLib", "LaughingLeader", "DB_LeaderLibCodex_Iterator");
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LeaderLibCodex_Iterator", 2);

PROC
LeaderLib_Codex_BuildIterator((INTEGER)_Max)
AND
NOT DB_LeaderLibCodex_Iterator(_,_)
THEN
LeaderLib_Codex_Internal_ClearOldIterator();
SysClear("DB_LeaderLibTemp_BuildSortIterator", 2);
DB_LeaderLibTemp_BuildSortIterator(0, _Max);

IF
DB_LeaderLibTemp_BuildSortIterator(_Index, _Max)
THEN
LeaderLib_Codex_OnSortIterator(_Index, _Max);

PROC
LeaderLib_Codex_OnSortIterator((INTEGER)_Index, (INTEGER)_Max)
AND
_Index < _Max
AND
IntegerSum(_Index, 1, _NextIndex)
AND
IntegertoString(_Index, _IndexStr)
THEN
DB_LeaderLibCodex_Iterator(_Index, _IndexStr);
NOT DB_LeaderLibTemp_BuildSortIterator(_Index, _Max);
DB_LeaderLibTemp_BuildSortIterator(_NextIndex, _Max);

PROC
LeaderLib_Codex_OnSortIterator((INTEGER)_Index, (INTEGER)_Max)
AND
_Index >= _Max
AND
DB_LeaderLibTemp_BuildSortIterator(_Index, _Max)
THEN
NOT DB_LeaderLibTemp_BuildSortIterator(_Index, _Max);
//END_REGION

//REGION UPDATER
IF
StoryEvent(_,"LeaderLib_Events_Internal_OnUpdateSettings")
AND
LeaderUpdater_QRY_SettingsNeedsUpdate("LLLIB_Settings_Codex")
THEN
LeaderLib_Codex_InitSettings();
LeaderLog_Log("SYSTEM", "[LeaderLib:Codex] Settings updated.");

PROC
LeaderLib_System_RegisterDatabases()
THEN
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LeaderLibCodex", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LeaderLibCodex_Iterator", 2);
LeaderUpdater_Register_Database("LeaderLib", "LaughingLeader", "Codex", "DB_LeaderLibCodexCount", 1);
LeaderLog_Log("TRACE", "[LeaderLib:Codex] Databases registered.");
//END_REGION
EXITSECTION

ENDEXITSECTION
ParentTargetEdge "LaughingLeader__LeaderLib"
